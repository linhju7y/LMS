{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Button, Card, Table } from \"antd\";\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name'\n}, {\n  title: 'Age',\n  dataIndex: 'age'\n}, {\n  title: 'Address',\n  dataIndex: 'address'\n}];\nconst data = [];\n\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: 32,\n    address: `London, Park Lane no. ${i}`\n  });\n}\n\nclass Operation extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      selectedRowKeys: [],\n      // Check here to configure the CRM column\n      loading: false\n    });\n\n    _defineProperty(this, \"start\", () => {\n      this.setState({\n        loading: true\n      }); // ajax request after empty completing\n\n      setTimeout(() => {\n        this.setState({\n          selectedRowKeys: [],\n          loading: false\n        });\n      }, 1000);\n    });\n\n    _defineProperty(this, \"onSelectChange\", selectedRowKeys => {\n      console.log('selectedRowKeys changed: ', selectedRowKeys);\n      this.setState({\n        selectedRowKeys\n      });\n    });\n  }\n\n  render() {\n    const {\n      loading,\n      selectedRowKeys\n    } = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange\n    };\n    const hasSelected = selectedRowKeys.length > 0;\n    return __jsx(Card, {\n      title: \"Operation\"\n    }, __jsx(\"div\", {\n      className: \"gx-mb-3\"\n    }, __jsx(Button, {\n      type: \"primary\",\n      onClick: this.start,\n      disabled: !hasSelected,\n      loading: loading\n    }, \"Reload\"), __jsx(\"span\", {\n      style: {\n        marginLeft: 8\n      }\n    }, hasSelected ? `Selected ${selectedRowKeys.length} items` : '')), __jsx(Table, {\n      className: \"gx-table-responsive\",\n      rowSelection: rowSelection,\n      columns: columns,\n      dataSource: data\n    }));\n  }\n\n}\n\nexport default Operation;","map":{"version":3,"sources":["C:/Users/HUNG PC/Desktop/1/TemplateNextjs/routes/components/table/Data/Operation.js"],"names":["React","Button","Card","Table","columns","title","dataIndex","data","i","push","key","name","age","address","Operation","Component","selectedRowKeys","loading","setState","setTimeout","console","log","render","state","rowSelection","onChange","onSelectChange","hasSelected","length","start","marginLeft"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAkC,MAAlC;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,KAAK,EAAE,MADQ;AAEfC,EAAAA,SAAS,EAAE;AAFI,CAAD,EAGb;AACDD,EAAAA,KAAK,EAAE,KADN;AAEDC,EAAAA,SAAS,EAAE;AAFV,CAHa,EAMb;AACDD,EAAAA,KAAK,EAAE,SADN;AAEDC,EAAAA,SAAS,EAAE;AAFV,CANa,CAAhB;AAWA,MAAMC,IAAI,GAAG,EAAb;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,EAAAA,IAAI,CAACE,IAAL,CAAU;AACRC,IAAAA,GAAG,EAAEF,CADG;AAERG,IAAAA,IAAI,EAAG,eAAcH,CAAE,EAFf;AAGRI,IAAAA,GAAG,EAAE,EAHG;AAIRC,IAAAA,OAAO,EAAG,yBAAwBL,CAAE;AAJ5B,GAAV;AAMD;;AAED,MAAMM,SAAN,SAAwBd,KAAK,CAACe,SAA9B,CAAwC;AAAA;AAAA;;AAAA,mCAC9B;AACNC,MAAAA,eAAe,EAAE,EADX;AACe;AACrBC,MAAAA,OAAO,EAAE;AAFH,KAD8B;;AAAA,mCAK9B,MAAM;AACZ,WAAKC,QAAL,CAAc;AAACD,QAAAA,OAAO,EAAE;AAAV,OAAd,EADY,CAEZ;;AACAE,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKD,QAAL,CAAc;AACZF,UAAAA,eAAe,EAAE,EADL;AAEZC,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OALS,EAKP,IALO,CAAV;AAMD,KAdqC;;AAAA,4CAepBD,eAAD,IAAqB;AACpCI,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCL,eAAzC;AACA,WAAKE,QAAL,CAAc;AAACF,QAAAA;AAAD,OAAd;AACD,KAlBqC;AAAA;;AAoBtCM,EAAAA,MAAM,GAAG;AACP,UAAM;AAACL,MAAAA,OAAD;AAAUD,MAAAA;AAAV,QAA6B,KAAKO,KAAxC;AACA,UAAMC,YAAY,GAAG;AACnBR,MAAAA,eADmB;AAEnBS,MAAAA,QAAQ,EAAE,KAAKC;AAFI,KAArB;AAIA,UAAMC,WAAW,GAAGX,eAAe,CAACY,MAAhB,GAAyB,CAA7C;AACA,WACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC;AAAZ,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,MAAC,MAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,OAAO,EAAE,KAAKC,KAFhB;AAGE,MAAA,QAAQ,EAAE,CAACF,WAHb;AAIE,MAAA,OAAO,EAAEV;AAJX,gBADF,EASE;AAAM,MAAA,KAAK,EAAE;AAACa,QAAAA,UAAU,EAAE;AAAb;AAAb,OACGH,WAAW,GAAI,YAAWX,eAAe,CAACY,MAAO,QAAtC,GAAgD,EAD9D,CATF,CADF,EAcE,MAAC,KAAD;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAuC,MAAA,YAAY,EAAEJ,YAArD;AAAmE,MAAA,OAAO,EAAEpB,OAA5E;AAAqF,MAAA,UAAU,EAAEG;AAAjG,MAdF,CADF;AAkBD;;AA7CqC;;AAiDxC,eAAeO,SAAf","sourcesContent":["import React from \"react\";\r\nimport {Button, Card, Table} from \"antd\";\r\n\r\nconst columns = [{\r\n  title: 'Name',\r\n  dataIndex: 'name',\r\n}, {\r\n  title: 'Age',\r\n  dataIndex: 'age',\r\n}, {\r\n  title: 'Address',\r\n  dataIndex: 'address',\r\n}];\r\n\r\nconst data = [];\r\nfor (let i = 0; i < 46; i++) {\r\n  data.push({\r\n    key: i,\r\n    name: `Edward King ${i}`,\r\n    age: 32,\r\n    address: `London, Park Lane no. ${i}`,\r\n  });\r\n}\r\n\r\nclass Operation extends React.Component {\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the CRM column\r\n    loading: false,\r\n  };\r\n  start = () => {\r\n    this.setState({loading: true});\r\n    // ajax request after empty completing\r\n    setTimeout(() => {\r\n      this.setState({\r\n        selectedRowKeys: [],\r\n        loading: false,\r\n      });\r\n    }, 1000);\r\n  };\r\n  onSelectChange = (selectedRowKeys) => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({selectedRowKeys});\r\n  };\r\n\r\n  render() {\r\n    const {loading, selectedRowKeys} = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n    return (\r\n      <Card title=\"Operation\">\r\n        <div className=\"gx-mb-3\">\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={this.start}\r\n            disabled={!hasSelected}\r\n            loading={loading}\r\n          >\r\n            Reload\r\n          </Button>\r\n          <span style={{marginLeft: 8}}>\r\n            {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\r\n          </span>\r\n        </div>\r\n        <Table className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={data}/>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Operation;\r\n"]},"metadata":{},"sourceType":"module"}