{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Button, Card, Table } from \"antd\";\nvar data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Jim Red',\n  age: 32,\n  address: 'London No. 2 Lake Park'\n}];\n\nvar ResetFilter = /*#__PURE__*/function (_React$Component) {\n  _inherits(ResetFilter, _React$Component);\n\n  var _super = _createSuper(ResetFilter);\n\n  function ResetFilter() {\n    var _this;\n\n    _classCallCheck(this, ResetFilter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      filteredInfo: null,\n      sortedInfo: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (pagination, filters, sorter) {\n      console.log('Various parameters', pagination, filters, sorter);\n\n      _this.setState({\n        filteredInfo: filters,\n        sortedInfo: sorter\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearFilters\", function () {\n      _this.setState({\n        filteredInfo: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearAll\", function () {\n      _this.setState({\n        filteredInfo: null,\n        sortedInfo: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setAgeSort\", function () {\n      _this.setState({\n        sortedInfo: {\n          order: 'descend',\n          columnKey: 'age'\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ResetFilter, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          sortedInfo = _this$state.sortedInfo,\n          filteredInfo = _this$state.filteredInfo;\n      sortedInfo = sortedInfo || {};\n      filteredInfo = filteredInfo || {};\n      var columns = [{\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        filters: [{\n          text: 'Joe',\n          value: 'Joe'\n        }, {\n          text: 'Jim',\n          value: 'Jim'\n        }],\n        filteredValue: filteredInfo.name || null,\n        onFilter: function onFilter(value, record) {\n          return record.name.includes(value);\n        },\n        sorter: function sorter(a, b) {\n          return a.name.length - b.name.length;\n        },\n        sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order\n      }, {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n        sorter: function sorter(a, b) {\n          return a.age - b.age;\n        },\n        sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order\n      }, {\n        title: 'Address',\n        dataIndex: 'address',\n        key: 'address',\n        filters: [{\n          text: 'London',\n          value: 'London'\n        }, {\n          text: 'New York',\n          value: 'New York'\n        }],\n        filteredValue: filteredInfo.address || null,\n        onFilter: function onFilter(value, record) {\n          return record.address.includes(value);\n        },\n        sorter: function sorter(a, b) {\n          return a.address.length - b.address.length;\n        },\n        sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order\n      }];\n      return __jsx(Card, {\n        title: \"Reset Filter\"\n      }, __jsx(\"div\", {\n        className: \"table-operations\"\n      }, __jsx(Button, {\n        onClick: this.setAgeSort\n      }, \"Sort age\"), __jsx(Button, {\n        onClick: this.clearFilters\n      }, \"Clear filters\"), __jsx(Button, {\n        onClick: this.clearAll\n      }, \"Clear filters and sorters\")), __jsx(Table, {\n        className: \"gx-table-responsive\",\n        columns: columns,\n        dataSource: data,\n        onChange: this.handleChange\n      }));\n    }\n  }]);\n\n  return ResetFilter;\n}(React.Component);\n\nexport default ResetFilter;","map":{"version":3,"sources":["C:/Users/HUNG PC/Desktop/1/TemplateNextjs/routes/components/table/Data/ResetFilter.js"],"names":["React","Button","Card","Table","data","key","name","age","address","ResetFilter","filteredInfo","sortedInfo","pagination","filters","sorter","console","log","setState","order","columnKey","state","columns","title","dataIndex","text","value","filteredValue","onFilter","record","includes","a","b","length","sortOrder","setAgeSort","clearFilters","clearAll","handleChange","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Button, Card, Table} from \"antd\";\r\n\r\nconst data = [{\r\n  key: '1',\r\n  name: 'John Brown',\r\n  age: 32,\r\n  address: 'New York No. 1 Lake Park',\r\n}, {\r\n  key: '2',\r\n  name: 'Jim Green',\r\n  age: 42,\r\n  address: 'London No. 1 Lake Park',\r\n}, {\r\n  key: '3',\r\n  name: 'Joe Black',\r\n  age: 32,\r\n  address: 'Sidney No. 1 Lake Park',\r\n}, {\r\n  key: '4',\r\n  name: 'Jim Red',\r\n  age: 32,\r\n  address: 'London No. 2 Lake Park',\r\n}];\r\n\r\nclass ResetFilter extends React.Component {\r\n  state = {\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n  };\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log('Various parameters', pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter,\r\n    });\r\n  };\r\n  clearFilters = () => {\r\n    this.setState({filteredInfo: null});\r\n  };\r\n  clearAll = () => {\r\n    this.setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null,\r\n    });\r\n  };\r\n  setAgeSort = () => {\r\n    this.setState({\r\n      sortedInfo: {\r\n        order: 'descend',\r\n        columnKey: 'age',\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {sortedInfo, filteredInfo} = this.state;\r\n    sortedInfo = sortedInfo || {};\r\n    filteredInfo = filteredInfo || {};\r\n    const columns = [{\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      filters: [\r\n        {text: 'Joe', value: 'Joe'},\r\n        {text: 'Jim', value: 'Jim'},\r\n      ],\r\n      filteredValue: filteredInfo.name || null,\r\n      onFilter: (value, record) => record.name.includes(value),\r\n      sorter: (a, b) => a.name.length - b.name.length,\r\n      sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\r\n    }, {\r\n      title: 'Age',\r\n      dataIndex: 'age',\r\n      key: 'age',\r\n      sorter: (a, b) => a.age - b.age,\r\n      sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order,\r\n    }, {\r\n      title: 'Address',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n      filters: [\r\n        {text: 'London', value: 'London'},\r\n        {text: 'New York', value: 'New York'},\r\n      ],\r\n      filteredValue: filteredInfo.address || null,\r\n      onFilter: (value, record) => record.address.includes(value),\r\n      sorter: (a, b) => a.address.length - b.address.length,\r\n      sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order,\r\n    }];\r\n    return (\r\n      <Card title=\"Reset Filter\">\r\n        <div className=\"table-operations\">\r\n          <Button onClick={this.setAgeSort}>Sort age</Button>\r\n          <Button onClick={this.clearFilters}>Clear filters</Button>\r\n          <Button onClick={this.clearAll}>Clear filters and sorters</Button>\r\n        </div>\r\n        <Table className=\"gx-table-responsive\" columns={columns} dataSource={data} onChange={this.handleChange}/>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetFilter;\r\n"]},"metadata":{},"sourceType":"module"}