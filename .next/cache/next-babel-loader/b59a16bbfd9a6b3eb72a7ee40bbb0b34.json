{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Card, Table } from \"antd\";\nvar columns = [{\n  title: 'Name',\n  dataIndex: 'name'\n}, {\n  title: 'Age',\n  dataIndex: 'age'\n}, {\n  title: 'Address',\n  dataIndex: 'address'\n}];\nvar data = [];\n\nfor (var i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: \"Edward King \".concat(i),\n    age: 32,\n    address: \"London, Park Lane no. \".concat(i)\n  });\n}\n\nvar CustomSelection = /*#__PURE__*/function (_React$Component) {\n  _inherits(CustomSelection, _React$Component);\n\n  var _super = _createSuper(CustomSelection);\n\n  function CustomSelection() {\n    var _this;\n\n    _classCallCheck(this, CustomSelection);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      selectedRowKeys: [] // Check here to configure the CRM column\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSelectChange\", function (selectedRowKeys) {\n      console.log('selectedRowKeys changed: ', selectedRowKeys);\n\n      _this.setState({\n        selectedRowKeys: selectedRowKeys\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(CustomSelection, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var selectedRowKeys = this.state.selectedRowKeys;\n      var rowSelection = {\n        selectedRowKeys: selectedRowKeys,\n        onChange: this.onSelectChange,\n        hideDefaultSelections: true,\n        selections: [{\n          key: 'all-data',\n          text: 'Select All Data',\n          onSelect: function onSelect() {\n            _this2.setState({\n              selectedRowKeys: _toConsumableArray(Array(46).keys()) // 0...45\n\n            });\n          }\n        }, {\n          key: 'odd',\n          text: 'Select Odd Row',\n          onSelect: function onSelect(changableRowKeys) {\n            var newSelectedRowKeys = [];\n            newSelectedRowKeys = changableRowKeys.filter(function (key, index) {\n              if (index % 2 !== 0) {\n                return false;\n              }\n\n              return true;\n            });\n\n            _this2.setState({\n              selectedRowKeys: newSelectedRowKeys\n            });\n          }\n        }, {\n          key: 'even',\n          text: 'Select Even Row',\n          onSelect: function onSelect(changableRowKeys) {\n            var newSelectedRowKeys = [];\n            newSelectedRowKeys = changableRowKeys.filter(function (key, index) {\n              if (index % 2 !== 0) {\n                return true;\n              }\n\n              return false;\n            });\n\n            _this2.setState({\n              selectedRowKeys: newSelectedRowKeys\n            });\n          }\n        }],\n        onSelection: this.onSelection\n      };\n      return __jsx(Card, {\n        title: \"Custom Selection\"\n      }, __jsx(Table, {\n        className: \"gx-table-responsive\",\n        rowSelection: rowSelection,\n        columns: columns,\n        dataSource: data\n      }));\n    }\n  }]);\n\n  return CustomSelection;\n}(React.Component);\n\nexport default CustomSelection;","map":{"version":3,"sources":["C:/Users/HUNG PC/Desktop/1/TemplateNextjs/routes/components/table/Data/CustomSelection.js"],"names":["React","Card","Table","columns","title","dataIndex","data","i","push","key","name","age","address","CustomSelection","selectedRowKeys","console","log","setState","state","rowSelection","onChange","onSelectChange","hideDefaultSelections","selections","text","onSelect","Array","keys","changableRowKeys","newSelectedRowKeys","filter","index","onSelection","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Card, Table} from \"antd\";\r\n\r\nconst columns = [{\r\n  title: 'Name',\r\n  dataIndex: 'name',\r\n}, {\r\n  title: 'Age',\r\n  dataIndex: 'age',\r\n}, {\r\n  title: 'Address',\r\n  dataIndex: 'address',\r\n}];\r\n\r\nconst data = [];\r\nfor (let i = 0; i < 46; i++) {\r\n  data.push({\r\n    key: i,\r\n    name: `Edward King ${i}`,\r\n    age: 32,\r\n    address: `London, Park Lane no. ${i}`,\r\n  });\r\n}\r\n\r\nclass CustomSelection extends React.Component {\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the CRM column\r\n  };\r\n  onSelectChange = (selectedRowKeys) => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({selectedRowKeys});\r\n  };\r\n\r\n  render() {\r\n    const {selectedRowKeys} = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n      hideDefaultSelections: true,\r\n      selections: [{\r\n        key: 'all-data',\r\n        text: 'Select All Data',\r\n        onSelect: () => {\r\n          this.setState({\r\n            selectedRowKeys: [...Array(46).keys()], // 0...45\r\n          });\r\n        },\r\n      }, {\r\n        key: 'odd',\r\n        text: 'Select Odd Row',\r\n        onSelect: (changableRowKeys) => {\r\n          let newSelectedRowKeys = [];\r\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n            if (index % 2 !== 0) {\r\n              return false;\r\n            }\r\n            return true;\r\n          });\r\n          this.setState({selectedRowKeys: newSelectedRowKeys});\r\n        },\r\n      }, {\r\n        key: 'even',\r\n        text: 'Select Even Row',\r\n        onSelect: (changableRowKeys) => {\r\n          let newSelectedRowKeys = [];\r\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n            if (index % 2 !== 0) {\r\n              return true;\r\n            }\r\n            return false;\r\n          });\r\n          this.setState({selectedRowKeys: newSelectedRowKeys});\r\n        },\r\n      }],\r\n      onSelection: this.onSelection,\r\n    };\r\n    return (\r\n      <Card title=\"Custom Selection\">\r\n        <Table className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={data}/>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomSelection;\r\n"]},"metadata":{},"sourceType":"module"}