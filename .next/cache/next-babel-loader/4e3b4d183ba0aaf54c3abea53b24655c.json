{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Card, Table } from \"antd\";\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name'\n}, {\n  title: 'Age',\n  dataIndex: 'age'\n}, {\n  title: 'Address',\n  dataIndex: 'address'\n}];\nconst data = [];\n\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: 32,\n    address: `London, Park Lane no. ${i}`\n  });\n}\n\nclass CustomSelection extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      selectedRowKeys: [] // Check here to configure the CRM column\n\n    });\n\n    _defineProperty(this, \"onSelectChange\", selectedRowKeys => {\n      console.log('selectedRowKeys changed: ', selectedRowKeys);\n      this.setState({\n        selectedRowKeys\n      });\n    });\n  }\n\n  render() {\n    const {\n      selectedRowKeys\n    } = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n      hideDefaultSelections: true,\n      selections: [{\n        key: 'all-data',\n        text: 'Select All Data',\n        onSelect: () => {\n          this.setState({\n            selectedRowKeys: [...Array(46).keys()] // 0...45\n\n          });\n        }\n      }, {\n        key: 'odd',\n        text: 'Select Odd Row',\n        onSelect: changableRowKeys => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n            if (index % 2 !== 0) {\n              return false;\n            }\n\n            return true;\n          });\n          this.setState({\n            selectedRowKeys: newSelectedRowKeys\n          });\n        }\n      }, {\n        key: 'even',\n        text: 'Select Even Row',\n        onSelect: changableRowKeys => {\n          let newSelectedRowKeys = [];\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\n            if (index % 2 !== 0) {\n              return true;\n            }\n\n            return false;\n          });\n          this.setState({\n            selectedRowKeys: newSelectedRowKeys\n          });\n        }\n      }],\n      onSelection: this.onSelection\n    };\n    return __jsx(Card, {\n      title: \"Custom Selection\"\n    }, __jsx(Table, {\n      className: \"gx-table-responsive\",\n      rowSelection: rowSelection,\n      columns: columns,\n      dataSource: data\n    }));\n  }\n\n}\n\nexport default CustomSelection;","map":{"version":3,"sources":["C:/Users/HUNG PC/Desktop/1/TemplateNextjs/routes/components/table/Data/CustomSelection.js"],"names":["React","Card","Table","columns","title","dataIndex","data","i","push","key","name","age","address","CustomSelection","Component","selectedRowKeys","console","log","setState","render","state","rowSelection","onChange","onSelectChange","hideDefaultSelections","selections","text","onSelect","Array","keys","changableRowKeys","newSelectedRowKeys","filter","index","onSelection"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,KAAd,QAA0B,MAA1B;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,KAAK,EAAE,MADQ;AAEfC,EAAAA,SAAS,EAAE;AAFI,CAAD,EAGb;AACDD,EAAAA,KAAK,EAAE,KADN;AAEDC,EAAAA,SAAS,EAAE;AAFV,CAHa,EAMb;AACDD,EAAAA,KAAK,EAAE,SADN;AAEDC,EAAAA,SAAS,EAAE;AAFV,CANa,CAAhB;AAWA,MAAMC,IAAI,GAAG,EAAb;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,EAAAA,IAAI,CAACE,IAAL,CAAU;AACRC,IAAAA,GAAG,EAAEF,CADG;AAERG,IAAAA,IAAI,EAAG,eAAcH,CAAE,EAFf;AAGRI,IAAAA,GAAG,EAAE,EAHG;AAIRC,IAAAA,OAAO,EAAG,yBAAwBL,CAAE;AAJ5B,GAAV;AAMD;;AAED,MAAMM,eAAN,SAA8Bb,KAAK,CAACc,SAApC,CAA8C;AAAA;AAAA;;AAAA,mCACpC;AACNC,MAAAA,eAAe,EAAE,EADX,CACe;;AADf,KADoC;;AAAA,4CAI1BA,eAAD,IAAqB;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,eAAzC;AACA,WAAKG,QAAL,CAAc;AAACH,QAAAA;AAAD,OAAd;AACD,KAP2C;AAAA;;AAS5CI,EAAAA,MAAM,GAAG;AACP,UAAM;AAACJ,MAAAA;AAAD,QAAoB,KAAKK,KAA/B;AACA,UAAMC,YAAY,GAAG;AACnBN,MAAAA,eADmB;AAEnBO,MAAAA,QAAQ,EAAE,KAAKC,cAFI;AAGnBC,MAAAA,qBAAqB,EAAE,IAHJ;AAInBC,MAAAA,UAAU,EAAE,CAAC;AACXhB,QAAAA,GAAG,EAAE,UADM;AAEXiB,QAAAA,IAAI,EAAE,iBAFK;AAGXC,QAAAA,QAAQ,EAAE,MAAM;AACd,eAAKT,QAAL,CAAc;AACZH,YAAAA,eAAe,EAAE,CAAC,GAAGa,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,EAAJ,CADL,CAC4B;;AAD5B,WAAd;AAGD;AAPU,OAAD,EAQT;AACDpB,QAAAA,GAAG,EAAE,KADJ;AAEDiB,QAAAA,IAAI,EAAE,gBAFL;AAGDC,QAAAA,QAAQ,EAAGG,gBAAD,IAAsB;AAC9B,cAAIC,kBAAkB,GAAG,EAAzB;AACAA,UAAAA,kBAAkB,GAAGD,gBAAgB,CAACE,MAAjB,CAAwB,CAACvB,GAAD,EAAMwB,KAAN,KAAgB;AAC3D,gBAAIA,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAqB;AACnB,qBAAO,KAAP;AACD;;AACD,mBAAO,IAAP;AACD,WALoB,CAArB;AAMA,eAAKf,QAAL,CAAc;AAACH,YAAAA,eAAe,EAAEgB;AAAlB,WAAd;AACD;AAZA,OARS,EAqBT;AACDtB,QAAAA,GAAG,EAAE,MADJ;AAEDiB,QAAAA,IAAI,EAAE,iBAFL;AAGDC,QAAAA,QAAQ,EAAGG,gBAAD,IAAsB;AAC9B,cAAIC,kBAAkB,GAAG,EAAzB;AACAA,UAAAA,kBAAkB,GAAGD,gBAAgB,CAACE,MAAjB,CAAwB,CAACvB,GAAD,EAAMwB,KAAN,KAAgB;AAC3D,gBAAIA,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAqB;AACnB,qBAAO,IAAP;AACD;;AACD,mBAAO,KAAP;AACD,WALoB,CAArB;AAMA,eAAKf,QAAL,CAAc;AAACH,YAAAA,eAAe,EAAEgB;AAAlB,WAAd;AACD;AAZA,OArBS,CAJO;AAuCnBG,MAAAA,WAAW,EAAE,KAAKA;AAvCC,KAArB;AAyCA,WACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC;AAAZ,OACE,MAAC,KAAD;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAuC,MAAA,YAAY,EAAEb,YAArD;AAAmE,MAAA,OAAO,EAAElB,OAA5E;AAAqF,MAAA,UAAU,EAAEG;AAAjG,MADF,CADF;AAKD;;AAzD2C;;AA4D9C,eAAeO,eAAf","sourcesContent":["import React from \"react\";\r\nimport {Card, Table} from \"antd\";\r\n\r\nconst columns = [{\r\n  title: 'Name',\r\n  dataIndex: 'name',\r\n}, {\r\n  title: 'Age',\r\n  dataIndex: 'age',\r\n}, {\r\n  title: 'Address',\r\n  dataIndex: 'address',\r\n}];\r\n\r\nconst data = [];\r\nfor (let i = 0; i < 46; i++) {\r\n  data.push({\r\n    key: i,\r\n    name: `Edward King ${i}`,\r\n    age: 32,\r\n    address: `London, Park Lane no. ${i}`,\r\n  });\r\n}\r\n\r\nclass CustomSelection extends React.Component {\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the CRM column\r\n  };\r\n  onSelectChange = (selectedRowKeys) => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({selectedRowKeys});\r\n  };\r\n\r\n  render() {\r\n    const {selectedRowKeys} = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n      hideDefaultSelections: true,\r\n      selections: [{\r\n        key: 'all-data',\r\n        text: 'Select All Data',\r\n        onSelect: () => {\r\n          this.setState({\r\n            selectedRowKeys: [...Array(46).keys()], // 0...45\r\n          });\r\n        },\r\n      }, {\r\n        key: 'odd',\r\n        text: 'Select Odd Row',\r\n        onSelect: (changableRowKeys) => {\r\n          let newSelectedRowKeys = [];\r\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n            if (index % 2 !== 0) {\r\n              return false;\r\n            }\r\n            return true;\r\n          });\r\n          this.setState({selectedRowKeys: newSelectedRowKeys});\r\n        },\r\n      }, {\r\n        key: 'even',\r\n        text: 'Select Even Row',\r\n        onSelect: (changableRowKeys) => {\r\n          let newSelectedRowKeys = [];\r\n          newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n            if (index % 2 !== 0) {\r\n              return true;\r\n            }\r\n            return false;\r\n          });\r\n          this.setState({selectedRowKeys: newSelectedRowKeys});\r\n        },\r\n      }],\r\n      onSelection: this.onSelection,\r\n    };\r\n    return (\r\n      <Card title=\"Custom Selection\">\r\n        <Table className=\"gx-table-responsive\" rowSelection={rowSelection} columns={columns} dataSource={data}/>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomSelection;\r\n"]},"metadata":{},"sourceType":"module"}