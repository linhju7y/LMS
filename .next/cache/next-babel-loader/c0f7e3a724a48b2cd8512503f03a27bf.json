{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Button, Card, Table } from \"antd\";\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Jim Red',\n  age: 32,\n  address: 'London No. 2 Lake Park'\n}];\n\nclass ResetFilter extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      filteredInfo: null,\n      sortedInfo: null\n    });\n\n    _defineProperty(this, \"handleChange\", (pagination, filters, sorter) => {\n      console.log('Various parameters', pagination, filters, sorter);\n      this.setState({\n        filteredInfo: filters,\n        sortedInfo: sorter\n      });\n    });\n\n    _defineProperty(this, \"clearFilters\", () => {\n      this.setState({\n        filteredInfo: null\n      });\n    });\n\n    _defineProperty(this, \"clearAll\", () => {\n      this.setState({\n        filteredInfo: null,\n        sortedInfo: null\n      });\n    });\n\n    _defineProperty(this, \"setAgeSort\", () => {\n      this.setState({\n        sortedInfo: {\n          order: 'descend',\n          columnKey: 'age'\n        }\n      });\n    });\n  }\n\n  render() {\n    let {\n      sortedInfo,\n      filteredInfo\n    } = this.state;\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const columns = [{\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      filters: [{\n        text: 'Joe',\n        value: 'Joe'\n      }, {\n        text: 'Jim',\n        value: 'Jim'\n      }],\n      filteredValue: filteredInfo.name || null,\n      onFilter: (value, record) => record.name.includes(value),\n      sorter: (a, b) => a.name.length - b.name.length,\n      sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order\n    }, {\n      title: 'Age',\n      dataIndex: 'age',\n      key: 'age',\n      sorter: (a, b) => a.age - b.age,\n      sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order\n    }, {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n      filters: [{\n        text: 'London',\n        value: 'London'\n      }, {\n        text: 'New York',\n        value: 'New York'\n      }],\n      filteredValue: filteredInfo.address || null,\n      onFilter: (value, record) => record.address.includes(value),\n      sorter: (a, b) => a.address.length - b.address.length,\n      sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order\n    }];\n    return __jsx(Card, {\n      title: \"Reset Filter\"\n    }, __jsx(\"div\", {\n      className: \"table-operations\"\n    }, __jsx(Button, {\n      onClick: this.setAgeSort\n    }, \"Sort age\"), __jsx(Button, {\n      onClick: this.clearFilters\n    }, \"Clear filters\"), __jsx(Button, {\n      onClick: this.clearAll\n    }, \"Clear filters and sorters\")), __jsx(Table, {\n      className: \"gx-table-responsive\",\n      columns: columns,\n      dataSource: data,\n      onChange: this.handleChange\n    }));\n  }\n\n}\n\nexport default ResetFilter;","map":{"version":3,"sources":["C:/Users/HUNG PC/Desktop/1/TemplateNextjs/routes/components/table/Data/ResetFilter.js"],"names":["React","Button","Card","Table","data","key","name","age","address","ResetFilter","Component","filteredInfo","sortedInfo","pagination","filters","sorter","console","log","setState","order","columnKey","render","state","columns","title","dataIndex","text","value","filteredValue","onFilter","record","includes","a","b","length","sortOrder","setAgeSort","clearFilters","clearAll","handleChange"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAkC,MAAlC;AAEA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA,GAAG,EAAE,GADO;AAEZC,EAAAA,IAAI,EAAE,YAFM;AAGZC,EAAAA,GAAG,EAAE,EAHO;AAIZC,EAAAA,OAAO,EAAE;AAJG,CAAD,EAKV;AACDH,EAAAA,GAAG,EAAE,GADJ;AAEDC,EAAAA,IAAI,EAAE,WAFL;AAGDC,EAAAA,GAAG,EAAE,EAHJ;AAIDC,EAAAA,OAAO,EAAE;AAJR,CALU,EAUV;AACDH,EAAAA,GAAG,EAAE,GADJ;AAEDC,EAAAA,IAAI,EAAE,WAFL;AAGDC,EAAAA,GAAG,EAAE,EAHJ;AAIDC,EAAAA,OAAO,EAAE;AAJR,CAVU,EAeV;AACDH,EAAAA,GAAG,EAAE,GADJ;AAEDC,EAAAA,IAAI,EAAE,SAFL;AAGDC,EAAAA,GAAG,EAAE,EAHJ;AAIDC,EAAAA,OAAO,EAAE;AAJR,CAfU,CAAb;;AAsBA,MAAMC,WAAN,SAA0BT,KAAK,CAACU,SAAhC,CAA0C;AAAA;AAAA;;AAAA,mCAChC;AACNC,MAAAA,YAAY,EAAE,IADR;AAENC,MAAAA,UAAU,EAAE;AAFN,KADgC;;AAAA,0CAKzB,CAACC,UAAD,EAAaC,OAAb,EAAsBC,MAAtB,KAAiC;AAC9CC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCJ,UAAlC,EAA8CC,OAA9C,EAAuDC,MAAvD;AACA,WAAKG,QAAL,CAAc;AACZP,QAAAA,YAAY,EAAEG,OADF;AAEZF,QAAAA,UAAU,EAAEG;AAFA,OAAd;AAID,KAXuC;;AAAA,0CAYzB,MAAM;AACnB,WAAKG,QAAL,CAAc;AAACP,QAAAA,YAAY,EAAE;AAAf,OAAd;AACD,KAduC;;AAAA,sCAe7B,MAAM;AACf,WAAKO,QAAL,CAAc;AACZP,QAAAA,YAAY,EAAE,IADF;AAEZC,QAAAA,UAAU,EAAE;AAFA,OAAd;AAID,KApBuC;;AAAA,wCAqB3B,MAAM;AACjB,WAAKM,QAAL,CAAc;AACZN,QAAAA,UAAU,EAAE;AACVO,UAAAA,KAAK,EAAE,SADG;AAEVC,UAAAA,SAAS,EAAE;AAFD;AADA,OAAd;AAMD,KA5BuC;AAAA;;AA8BxCC,EAAAA,MAAM,GAAG;AACP,QAAI;AAACT,MAAAA,UAAD;AAAaD,MAAAA;AAAb,QAA6B,KAAKW,KAAtC;AACAV,IAAAA,UAAU,GAAGA,UAAU,IAAI,EAA3B;AACAD,IAAAA,YAAY,GAAGA,YAAY,IAAI,EAA/B;AACA,UAAMY,OAAO,GAAG,CAAC;AACfC,MAAAA,KAAK,EAAE,MADQ;AAEfC,MAAAA,SAAS,EAAE,MAFI;AAGfpB,MAAAA,GAAG,EAAE,MAHU;AAIfS,MAAAA,OAAO,EAAE,CACP;AAACY,QAAAA,IAAI,EAAE,KAAP;AAAcC,QAAAA,KAAK,EAAE;AAArB,OADO,EAEP;AAACD,QAAAA,IAAI,EAAE,KAAP;AAAcC,QAAAA,KAAK,EAAE;AAArB,OAFO,CAJM;AAQfC,MAAAA,aAAa,EAAEjB,YAAY,CAACL,IAAb,IAAqB,IARrB;AASfuB,MAAAA,QAAQ,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmBA,MAAM,CAACxB,IAAP,CAAYyB,QAAZ,CAAqBJ,KAArB,CATd;AAUfZ,MAAAA,MAAM,EAAE,CAACiB,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAAC1B,IAAF,CAAO4B,MAAP,GAAgBD,CAAC,CAAC3B,IAAF,CAAO4B,MAV1B;AAWfC,MAAAA,SAAS,EAAEvB,UAAU,CAACQ,SAAX,KAAyB,MAAzB,IAAmCR,UAAU,CAACO;AAX1C,KAAD,EAYb;AACDK,MAAAA,KAAK,EAAE,KADN;AAEDC,MAAAA,SAAS,EAAE,KAFV;AAGDpB,MAAAA,GAAG,EAAE,KAHJ;AAIDU,MAAAA,MAAM,EAAE,CAACiB,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACzB,GAAF,GAAQ0B,CAAC,CAAC1B,GAJ3B;AAKD4B,MAAAA,SAAS,EAAEvB,UAAU,CAACQ,SAAX,KAAyB,KAAzB,IAAkCR,UAAU,CAACO;AALvD,KAZa,EAkBb;AACDK,MAAAA,KAAK,EAAE,SADN;AAEDC,MAAAA,SAAS,EAAE,SAFV;AAGDpB,MAAAA,GAAG,EAAE,SAHJ;AAIDS,MAAAA,OAAO,EAAE,CACP;AAACY,QAAAA,IAAI,EAAE,QAAP;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OADO,EAEP;AAACD,QAAAA,IAAI,EAAE,UAAP;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAFO,CAJR;AAQDC,MAAAA,aAAa,EAAEjB,YAAY,CAACH,OAAb,IAAwB,IARtC;AASDqB,MAAAA,QAAQ,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmBA,MAAM,CAACtB,OAAP,CAAeuB,QAAf,CAAwBJ,KAAxB,CAT5B;AAUDZ,MAAAA,MAAM,EAAE,CAACiB,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACxB,OAAF,CAAU0B,MAAV,GAAmBD,CAAC,CAACzB,OAAF,CAAU0B,MAV9C;AAWDC,MAAAA,SAAS,EAAEvB,UAAU,CAACQ,SAAX,KAAyB,SAAzB,IAAsCR,UAAU,CAACO;AAX3D,KAlBa,CAAhB;AA+BA,WACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC;AAAZ,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKiB;AAAtB,kBADF,EAEE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKC;AAAtB,uBAFF,EAGE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKC;AAAtB,mCAHF,CADF,EAME,MAAC,KAAD;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAuC,MAAA,OAAO,EAAEf,OAAhD;AAAyD,MAAA,UAAU,EAAEnB,IAArE;AAA2E,MAAA,QAAQ,EAAE,KAAKmC;AAA1F,MANF,CADF;AAUD;;AA3EuC;;AA8E1C,eAAe9B,WAAf","sourcesContent":["import React from \"react\";\r\nimport {Button, Card, Table} from \"antd\";\r\n\r\nconst data = [{\r\n  key: '1',\r\n  name: 'John Brown',\r\n  age: 32,\r\n  address: 'New York No. 1 Lake Park',\r\n}, {\r\n  key: '2',\r\n  name: 'Jim Green',\r\n  age: 42,\r\n  address: 'London No. 1 Lake Park',\r\n}, {\r\n  key: '3',\r\n  name: 'Joe Black',\r\n  age: 32,\r\n  address: 'Sidney No. 1 Lake Park',\r\n}, {\r\n  key: '4',\r\n  name: 'Jim Red',\r\n  age: 32,\r\n  address: 'London No. 2 Lake Park',\r\n}];\r\n\r\nclass ResetFilter extends React.Component {\r\n  state = {\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n  };\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log('Various parameters', pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter,\r\n    });\r\n  };\r\n  clearFilters = () => {\r\n    this.setState({filteredInfo: null});\r\n  };\r\n  clearAll = () => {\r\n    this.setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null,\r\n    });\r\n  };\r\n  setAgeSort = () => {\r\n    this.setState({\r\n      sortedInfo: {\r\n        order: 'descend',\r\n        columnKey: 'age',\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {sortedInfo, filteredInfo} = this.state;\r\n    sortedInfo = sortedInfo || {};\r\n    filteredInfo = filteredInfo || {};\r\n    const columns = [{\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      filters: [\r\n        {text: 'Joe', value: 'Joe'},\r\n        {text: 'Jim', value: 'Jim'},\r\n      ],\r\n      filteredValue: filteredInfo.name || null,\r\n      onFilter: (value, record) => record.name.includes(value),\r\n      sorter: (a, b) => a.name.length - b.name.length,\r\n      sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\r\n    }, {\r\n      title: 'Age',\r\n      dataIndex: 'age',\r\n      key: 'age',\r\n      sorter: (a, b) => a.age - b.age,\r\n      sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order,\r\n    }, {\r\n      title: 'Address',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n      filters: [\r\n        {text: 'London', value: 'London'},\r\n        {text: 'New York', value: 'New York'},\r\n      ],\r\n      filteredValue: filteredInfo.address || null,\r\n      onFilter: (value, record) => record.address.includes(value),\r\n      sorter: (a, b) => a.address.length - b.address.length,\r\n      sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order,\r\n    }];\r\n    return (\r\n      <Card title=\"Reset Filter\">\r\n        <div className=\"table-operations\">\r\n          <Button onClick={this.setAgeSort}>Sort age</Button>\r\n          <Button onClick={this.clearFilters}>Clear filters</Button>\r\n          <Button onClick={this.clearAll}>Clear filters and sorters</Button>\r\n        </div>\r\n        <Table className=\"gx-table-responsive\" columns={columns} dataSource={data} onChange={this.handleChange}/>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetFilter;\r\n"]},"metadata":{},"sourceType":"module"}