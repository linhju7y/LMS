{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Card, Table } from \"antd\"; // In the fifth row, other columns are merged into first column\n// by setting it's colSpan to be 0\n\nconst renderContent = (value, row, index) => {\n  const obj = {\n    children: value,\n    props: {}\n  };\n\n  if (index === 4) {\n    obj.props.colSpan = 0;\n  }\n\n  return obj;\n};\n\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  render: (text, row, index) => {\n    if (index < 4) {\n      return __jsx(\"span\", {\n        className: \"gx-link\"\n      }, text);\n    }\n\n    return {\n      children: __jsx(\"span\", {\n        className: \"gx-link\"\n      }, text),\n      props: {\n        colSpan: 5\n      }\n    };\n  }\n}, {\n  title: 'Age',\n  dataIndex: 'age',\n  render: renderContent\n}, {\n  title: 'Home phone',\n  colSpan: 2,\n  dataIndex: 'tel',\n  render: (value, row, index) => {\n    const obj = {\n      children: value,\n      props: {}\n    };\n\n    if (index === 2) {\n      obj.props.rowSpan = 2;\n    } // These two are merged into above cell\n\n\n    if (index === 3) {\n      obj.props.rowSpan = 0;\n    }\n\n    if (index === 4) {\n      obj.props.colSpan = 0;\n    }\n\n    return obj;\n  }\n}, {\n  title: 'Phone',\n  colSpan: 0,\n  dataIndex: 'phone',\n  render: renderContent\n}, {\n  title: 'Address',\n  dataIndex: 'address',\n  render: renderContent\n}];\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  tel: '0571-22098909',\n  phone: 18889898989,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Jim Green',\n  tel: '0571-22098333',\n  phone: 18889898888,\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  tel: '0575-22098909',\n  phone: 18900010002,\n  address: 'Sidney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Jim Red',\n  age: 18,\n  tel: '0575-22098909',\n  phone: 18900010002,\n  address: 'London No. 2 Lake Park'\n}, {\n  key: '5',\n  name: 'Jake White',\n  age: 18,\n  tel: '0575-22098909',\n  phone: 18900010002,\n  address: 'Dublin No. 2 Lake Park'\n}];\n\nconst ColRowSpan = () => {\n  return __jsx(Card, {\n    title: \"ColSpan and RowSpan Table\"\n  }, __jsx(Table, {\n    className: \"gx-table-responsive\",\n    columns: columns,\n    dataSource: data,\n    bordered: true\n  }));\n};\n\nexport default ColRowSpan;","map":{"version":3,"sources":["C:/Users/HUNG PC/Desktop/1/TemplateNextjs/routes/components/table/Basic/ColRowSpan.js"],"names":["React","Card","Table","renderContent","value","row","index","obj","children","props","colSpan","columns","title","dataIndex","render","text","rowSpan","data","key","name","age","tel","phone","address","ColRowSpan"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Card, Table} from \"antd\";\r\n// In the fifth row, other columns are merged into first column\r\n// by setting it's colSpan to be 0\r\nconst renderContent = (value, row, index) => {\r\n  const obj = {\r\n    children: value,\r\n    props: {},\r\n  };\r\n  if (index === 4) {\r\n    obj.props.colSpan = 0;\r\n  }\r\n  return obj;\r\n};\r\n\r\nconst columns = [{\r\n  title: 'Name',\r\n  dataIndex: 'name',\r\n  render: (text, row, index) => {\r\n    if (index < 4) {\r\n      return <span className=\"gx-link\">{text}</span>;\r\n    }\r\n    return {\r\n      children: <span className=\"gx-link\">{text}</span>,\r\n      props: {\r\n        colSpan: 5,\r\n      },\r\n    };\r\n  },\r\n}, {\r\n  title: 'Age',\r\n  dataIndex: 'age',\r\n  render: renderContent,\r\n}, {\r\n  title: 'Home phone',\r\n  colSpan: 2,\r\n  dataIndex: 'tel',\r\n  render: (value, row, index) => {\r\n    const obj = {\r\n      children: value,\r\n      props: {},\r\n    };\r\n    if (index === 2) {\r\n      obj.props.rowSpan = 2;\r\n    }\r\n    // These two are merged into above cell\r\n    if (index === 3) {\r\n      obj.props.rowSpan = 0;\r\n    }\r\n    if (index === 4) {\r\n      obj.props.colSpan = 0;\r\n    }\r\n    return obj;\r\n  },\r\n}, {\r\n  title: 'Phone',\r\n  colSpan: 0,\r\n  dataIndex: 'phone',\r\n  render: renderContent,\r\n}, {\r\n  title: 'Address',\r\n  dataIndex: 'address',\r\n  render: renderContent,\r\n}];\r\n\r\nconst data = [{\r\n  key: '1',\r\n  name: 'John Brown',\r\n  age: 32,\r\n  tel: '0571-22098909',\r\n  phone: 18889898989,\r\n  address: 'New York No. 1 Lake Park',\r\n}, {\r\n  key: '2',\r\n  name: 'Jim Green',\r\n  tel: '0571-22098333',\r\n  phone: 18889898888,\r\n  age: 42,\r\n  address: 'London No. 1 Lake Park',\r\n}, {\r\n  key: '3',\r\n  name: 'Joe Black',\r\n  age: 32,\r\n  tel: '0575-22098909',\r\n  phone: 18900010002,\r\n  address: 'Sidney No. 1 Lake Park',\r\n}, {\r\n  key: '4',\r\n  name: 'Jim Red',\r\n  age: 18,\r\n  tel: '0575-22098909',\r\n  phone: 18900010002,\r\n  address: 'London No. 2 Lake Park',\r\n}, {\r\n  key: '5',\r\n  name: 'Jake White',\r\n  age: 18,\r\n  tel: '0575-22098909',\r\n  phone: 18900010002,\r\n  address: 'Dublin No. 2 Lake Park',\r\n}];\r\n\r\nconst ColRowSpan = () => {\r\n    return (\r\n      <Card title=\"ColSpan and RowSpan Table\">\r\n        <Table className=\"gx-table-responsive\" columns={columns} dataSource={data} bordered/>\r\n      </Card>\r\n    );\r\n  }\r\n;\r\n\r\nexport default ColRowSpan;\r\n"]},"metadata":{},"sourceType":"module"}